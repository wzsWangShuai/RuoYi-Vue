<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.mapper.PmTaskMapper">
    
    <resultMap type="PmTask" id="PmTaskResult">
        <result property="taskId"    column="task_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="projId"    column="proj_id"    />
        <result property="taskName"    column="task_name"    />
        <result property="description"    column="description"    />
        <result property="ownerId"    column="owner_id"    />
        <result property="priority"    column="priority"    />
        <result property="status"    column="status"    />
        <result property="planStartDate"    column="plan_start_date"    />
        <result property="planEndDate"    column="plan_end_date"    />
        <result property="actualEndDate"    column="actual_end_date"    />
        <result property="estimatedHours"    column="estimated_hours"    />
        <result property="actualHours"    column="actual_hours"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="taskSchedule"    column="task_schedule"    />
    </resultMap>

    <sql id="selectPmTaskVo">
        select task_id, parent_id, proj_id, task_name, description, owner_id, priority, status, plan_start_date, plan_end_date, actual_end_date, estimated_hours, actual_hours, del_flag, create_by, create_time, update_by, update_time, task_schedule from pm_task
    </sql>

    <select id="selectPmTaskList" parameterType="PmTask" resultMap="PmTaskResult">
        <include refid="selectPmTaskVo"/>
        <where>  
            <if test="projId != null "> and proj_id = #{projId}</if>
            <if test="taskName != null  and taskName != ''"> and task_name like concat('%', #{taskName}, '%')</if>
            <if test="ownerId != null "> and owner_id = #{ownerId}</if>
            <if test="priority != null  and priority != ''"> and priority = #{priority}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="planStartDate != null "> and plan_start_date = #{planStartDate}</if>
            <if test="planEndDate != null "> and plan_end_date = #{planEndDate}</if>
            <if test="actualEndDate != null "> and actual_end_date = #{actualEndDate}</if>
        </where>
    </select>
    
    <select id="selectPmTaskByTaskId" parameterType="Long" resultMap="PmTaskResult">
        <include refid="selectPmTaskVo"/>
        where task_id = #{taskId}
    </select>

    <select id="selectPmTaskByTaskName" parameterType="String" resultMap="PmTaskResult">
        <include refid="selectPmTaskVo"/>
        where task_name = #{taskName}
    </select>

    <select id="selectPmTaskByTaskIds" parameterType="String" resultMap="PmTaskResult">
        <include refid="selectPmTaskVo"/>
        where task_id in
        <foreach item="taskId" collection="array" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </select>

    <insert id="insertPmTask" parameterType="PmTask" useGeneratedKeys="true" keyProperty="taskId">
        insert into pm_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">parent_id,</if>
            <if test="projId != null">proj_id,</if>
            <if test="taskName != null and taskName != ''">task_name,</if>
            <if test="description != null">description,</if>
            <if test="ownerId != null">owner_id,</if>
            <if test="priority != null and priority != ''">priority,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="planStartDate != null">plan_start_date,</if>
            <if test="planEndDate != null">plan_end_date,</if>
            <if test="actualEndDate != null">actual_end_date,</if>
            <if test="estimatedHours != null">estimated_hours,</if>
            <if test="actualHours != null">actual_hours,</if>
            <if test="delFlag != null and delFlag != ''">del_flag,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">#{parentId},</if>
            <if test="projId != null">#{projId},</if>
            <if test="taskName != null and taskName != ''">#{taskName},</if>
            <if test="description != null">#{description},</if>
            <if test="ownerId != null">#{ownerId},</if>
            <if test="priority != null and priority != ''">#{priority},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="planStartDate != null">#{planStartDate},</if>
            <if test="planEndDate != null">#{planEndDate},</if>
            <if test="actualEndDate != null">#{actualEndDate},</if>
            <if test="estimatedHours != null">#{estimatedHours},</if>
            <if test="actualHours != null">#{actualHours},</if>
            <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePmTask" parameterType="PmTask">
        update pm_task
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="projId != null">proj_id = #{projId},</if>
            <if test="taskName != null and taskName != ''">task_name = #{taskName},</if>
            <if test="description != null">description = #{description},</if>
            <if test="ownerId != null">owner_id = #{ownerId},</if>
            <if test="priority != null and priority != ''">priority = #{priority},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="planStartDate != null">plan_start_date = #{planStartDate},</if>
            <if test="planEndDate != null">plan_end_date = #{planEndDate},</if>
            <if test="actualEndDate != null">actual_end_date = #{actualEndDate},</if>
            <if test="estimatedHours != null">estimated_hours = #{estimatedHours},</if>
            <if test="actualHours != null">actual_hours = #{actualHours},</if>
            <if test="delFlag != null and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="taskSchedule != null">task_schedule = #{taskSchedule},</if>
        </trim>
        where task_id = #{taskId}
    </update>

    <delete id="deletePmTaskByTaskId" parameterType="Long">
        delete from pm_task where task_id = #{taskId}
    </delete>

    <delete id="deletePmTaskByTaskIds" parameterType="String">
        delete from pm_task where task_id in 
        <foreach item="taskId" collection="array" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </delete>

    <select id="selectPmTaskCountByProjId" parameterType="PmTask" resultType="Long">
        select count(1) from pm_task
        <where>
            <if test="projId != null "> and proj_id = #{projId}</if>
            <if test="taskName != null  and taskName != ''"> and task_name like concat('%', #{taskName}, '%')</if>
            <if test="ownerId != null "> and owner_id = #{ownerId}</if>
            <if test="priority != null  and priority != ''"> and priority = #{priority}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="planStartDate != null "> and plan_start_date = #{planStartDate}</if>
            <if test="planEndDate != null "> and plan_end_date = #{planEndDate}</if>
            <if test="actualEndDate != null "> and actual_end_date = #{actualEndDate}</if>
        </where>
    </select>

    <select id="selectMonthlyTaskCompletion" parameterType="map" resultType="map">
        SELECT
        proj_id,
        DATE_FORMAT(actual_end_date, '%Y-%m') AS month,
        COUNT(*) AS completed_tasks
        FROM
        pm_task
        WHERE
        status = '3'
        <if test="startDate != null"> AND actual_end_date &gt;= #{startDate}</if>
        <if test="endDate != null"> AND actual_end_date &lt;= #{endDate}</if>
        GROUP BY
        proj_id, DATE_FORMAT(actual_end_date, '%Y-%m')
        ORDER BY
        proj_id, month
    </select>
</mapper>